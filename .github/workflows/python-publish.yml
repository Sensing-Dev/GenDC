# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
         os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: dist/*.whl

  upload-test-pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
    - name: DL artifacts
      uses: actions/download-artifact@v4
      with: 
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
      continue-on-error: true

    - name: Check if upload failed due to existing file
      id: check-upload
      run: |
        if grep -q "File already exists" upload.log; then
          echo "::set-output name=already-exists::true"
        else
          echo "::set-output name=already-exists::false"
        fi

  test_TEST_PYPI:
    needs: [upload-test-pypi]
    if: needs.upload-test-pypi.outputs.already-exists == 'true' || success()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
         os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: test
      run: |
        sleep 60 # wait package to upload
        pip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple gendc-python==${{ github.event.release.tag_name }}
        python -c "from  gendc_python.gendc_separator import descriptor as gendc"

  upload_PYPI:
    needs: [ test_TEST_PYPI ]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
    - name: DL artifacts
      uses: actions/download-artifact@v4
      with: 
        pattern: cibw-*
        path: dist
        merge-multiple: true    
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
